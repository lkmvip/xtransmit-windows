<Window x:Class="XTransmit.View.WindowCurlPlay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        Style="{StaticResource WindowApp}"
        Title="{Binding Path=WindowTitle}">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="Button" BasedOn="{StaticResource ButtonToolbar}"/>
            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="Margin" Value="10"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="Normal"
                         ProgressValue="{Binding Path=WindowProgress}"/>
    </Window.TaskbarItemInfo>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Toolbar. Top -->
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ToolBarTray Grid.Column="0" IsLocked="True">
                <ToolBar IsOverflowOpen="False">
                    <Button ToolTip="{StaticResource _save}" 
                            Content="{md:PackIcon Kind=ContentSave}"
                            Command="{Binding Path=CommandSaveProfile}"/>

                    <Separator/>

                    <CheckBox Content="{StaticResource curl_read_response}"
                              IsEnabled="{Binding Path=IsNotRunning}"
                              IsChecked="{Binding Path=Profile.IsReadResponse}"/>

                    <Button Foreground="{DynamicResource MaterialDesignBody}"
                            Command="{Binding Path=CommandTogglePlay}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonToolbar}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsNotRunning}" Value="True">
                                        <Setter Property="ToolTip" Value="{StaticResource _start}"/>
                                        <Setter Property="Content" Value="{md:PackIcon Kind=Play}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsNotRunning}" Value="False">
                                        <Setter Property="ToolTip" Value="{StaticResource _stop}"/>
                                        <Setter Property="Content" Value="{md:PackIcon Kind=Pause}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </ToolBar>
            </ToolBarTray>

            <Grid Grid.Column="1"
                  Background="{DynamicResource MaterialDesignToolBarBackground}">
                <ProgressBar Margin="10, 0" 
                             Value="75"
                             IsIndeterminate="True">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar" BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsNotRunning}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsNotRunning}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
            </Grid>
        </Grid>

        <!-- Profile Info. Lower Left -->
        <Border Grid.Row="1" Grid.Column="0" BorderThickness="0, 0, 2, 0" 
                BorderBrush="{DynamicResource MaterialDesignDivider}"
                IsEnabled="{Binding Path=IsNotRunning}">
            <StackPanel>
                <TextBox md:HintAssist.Hint="{StaticResource curl_play_times}"
                         Text="{Binding Path=Profile.PlayTimes, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox ToolTip="{StaticResource confirm_by_enter}"
                         md:HintAssist.Hint="{StaticResource curl_delay_format}"
                         Text="{Binding Path=DelaySetting, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" 
                                    Command="{Binding Path=CommandSetDalay}"/>
                    </TextBox.InputBindings>
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                            <Setter Property="Margin" Value="10"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsRandomDelay}" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <Expander HorizontalAlignment="Stretch" IsExpanded="True">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <md:PackIcon Kind="Information" Margin="10, 0"
                                         VerticalAlignment="Center"/>
                            <TextBlock Text="{StaticResource curl_site_information}"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                    </Expander.Header>
                    <StackPanel Orientation="Vertical">
                        <TextBox md:HintAssist.Hint="{StaticResource curl_profile_title}" 
                                 Text="{Binding Path=Profile.Title, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox md:HintAssist.Hint="{StaticResource curl_website_url}" 
                                 Text="{Binding Path=Profile.Website, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox md:HintAssist.Hint="{StaticResource _updated}" 
                                 Text="{Binding Path=Profile.TimeUpdated, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Expander>
            </StackPanel>
        </Border>

        <!-- Curl Parameter and Response. Lower Right -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- arguments. the UpdateSourceTrigger property is defaults to LostFocus -->
            <DataGrid Grid.Row="0" Margin="10"
                      GridLinesVisibility="Horizontal"
                      SelectionMode="Single"
                      CanUserAddRows="True"
                      CanUserDeleteRows="True"
                      IsEnabled="{Binding Path=IsNotRunning}"
                      ItemsSource="{Binding Path=Profile.ArgumentList}">

                <DataGrid.ContextMenu>
                    <ContextMenu Background="{DynamicResource MaterialDesignBackground}">
                        <MenuItem Header="{StaticResource curl_copy_argument_to_clipboard}"
                                  Icon="{md:PackIcon Kind=ClipboardTextOutline}"
                                  Command="ApplicationCommands.Copy"/>
                        <MenuItem Header="{StaticResource _delete}"
                                  Icon="{md:PackIcon Kind=Delete}"
                                  Command="ApplicationCommands.Delete"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Argument" Width="Auto" Binding="{Binding Argument}"/>
                    <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value}">
                        <DataGridTextColumn.EditingElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <!-- splitter -->
            <GridSplitter Grid.Row="1" Margin="0, 10, 0, 0"
                          ShowsPreview="True"
                          HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          Width="40" Height="6"/>

            <!-- response -->
            <DataGrid Grid.Row="2" 
                      Margin="10"
                      SelectionMode="Extended"
                      CanUserSortColumns="True"
                      IsReadOnly="True"
                      ItemsSource="{Binding Path=ResponseList, Mode=OneWay}">
                <DataGrid.ContextMenu>
                    <ContextMenu Background="{DynamicResource MaterialDesignBackground}">
                        <MenuItem Header="{StaticResource curl_copy_response_to_clipboard}" 
                                  Icon="{md:PackIcon Kind=ClipboardTextOutline}"
                                  Command="ApplicationCommands.Copy"/>
                        
                        <MenuItem Header="{StaticResource clear_all}"
                                  Icon="{md:PackIcon Kind=PlaylistRemove}"
                                  Command="{Binding Path=CommandClearResponse}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="Auto"
                                        Header="{StaticResource _index}" 
                                        Binding="{Binding Path=Index}"/>

                    <DataGridTextColumn Width="Auto" 
                                        Header="{StaticResource _time}" 
                                        Binding="{Binding Path=Time}"/>
                    
                    <DataGridTextColumn Width="*" 
                                        Header="{StaticResource _response}" 
                                        Binding="{Binding Path=Response}"/>
                </DataGrid.Columns>
            </DataGrid>            
        </Grid>
    </Grid>
</Window>
